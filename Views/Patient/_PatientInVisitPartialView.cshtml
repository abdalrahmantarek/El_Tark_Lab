@using LAB.ViewModel;
@model VisitViewModel
@{
    Layout = null;
}

<div class="row">
<!--begin::Input group-->
	<div class="fv-row mb-7 fv-plugins-icon-container col-6">
	<!--begin::Label-->
	<label class="required fs-6 fw-semibold mb-2">PatientName</label>
	<!--end::Label-->
	<!--begin::Input-->
		<input type="hidden" name="Patient.CreationDate" value="@Model.Patient.CreationDate" />
		<input type="hidden" name="Patient.PatientId" value="@Model.Patient.PatientId" />
		<input type="hidden" asp-for="Patient.LastUpdateBy" />
		<input type="hidden" asp-for="Patient.LastUpdateFrom" />
		<input type="hidden" asp-for="Patient.LastUpdateDate" />
		<input type="text" class="form-control form-control-solid" placeholder="" required name="Patient.PatientName" value="@Model.Patient.PatientName">
	<!--end::Input-->
	<div class="fv-plugins-message-container invalid-feedback"></div>
</div>
	<!--end::Input group-->
	<!--begin::Input group-->
		<div class="fv-row mb-7 fv-plugins-icon-container col-6">
	<!--begin::Label-->
	<label class="fs-6 fw-semibold mb-2">
		<span class="">PatientEmail</span>
		<i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" aria-label="Email address must be active" data-bs-original-title="Email address must be active" data-kt-initialized="1"></i>
	</label>
	<!--end::Label-->
	<!--begin::Input-->
		<input type="email" class="form-control form-control-solid" placeholder="" name="Patient.PatientEmail" value="@Model.Patient.PatientEmail">
	<!--end::Input-->
	<div class="fv-plugins-message-container invalid-feedback"></div>
</div>
	<!--end::Input group-->
</div>
<div class="row">
	<!--begin::Input group-->
	 <div class="fv-row mb-15 col-3">
	<!--begin::Label-->
	<label class="fs-6 fw-semibold mb-2">PatientNidType</label>
	<!--end::Label-->
	<!--begin::Input-->
		<input type="text" class="form-control form-control-solid" placeholder="" asp-for="Patient.PatientNidType">
	<!--end::Input-->
</div>
	<!--end::Input group-->

	 <div class="d-flex flex-column mb-7 fv-row fv-plugins-icon-container col-6">
			<!--begin::Label-->
			<label class=" fs-6 fw-semibold mb-2">Address</label>
			<!--end::Label-->
			<!--begin::Input-->
		<input type="text" class="form-control form-control-solid" placeholder="" name="Patient.PatientAddress" value="@Model.Patient.PatientAddress">
			<!--end::Input-->
			<div class="fv-plugins-message-container invalid-feedback"></div>
		</div>
	 <!--end::Input group-->
	 <!--begin::Input group-->
	  <div class="d-flex flex-column mb-7 fv-row col-3">
 		<!--begin::Label-->
 		<label class="fs-6 fw-semibold mb-2 required">Gender</label>
 		<!--end::Label-->
 		<!--begin::Input-->
		<select asp-for="Patient.PatientGender" class=" form-control">
 			<option value="M">Male</option>
 			<option value="F">Female</option>
 		</select>
 
 		<!--end::Input-->
	  </div>
	 <!--end::Input group-->
 </div>
  <div class="row">
	<!--begin::Input group-->
	<div class="d-flex flex-column mb-7 fv-row fv-plugins-icon-container col-6">
		<!--begin::Label-->
		<label class=" fs-6 fw-semibold mb-2">patientNID</label>
		<!--end::Label-->
		<!--begin::Input-->
		<input class="form-control form-control-solid" placeholder="" name="Patient.PatientNid" value="@Model.Patient.PatientNid">
		<!--end::Input-->
		<div class="fv-plugins-message-container invalid-feedback"></div>
	</div>
	<!--end::Input group-->
	<!--begin::Input group-->
	<div class="d-flex flex-column mb-7 fv-row fv-plugins-icon-container col-6">
		<!--begin::Label-->
		<label class="fs-6 fw-semibold mb-2">
			<span class="required">Country</span>
			<i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" aria-label="Country of origination" data-bs-original-title="Country of origination" data-kt-initialized="1"></i>
		</label>
		<!--end::Label-->
		<!--begin::Input-->
		<input type="text" required class="form-control form-control-solid" placeholder="" name="Patient.PatientCountry" value="@Model.Patient.PatientCountry">
		<!--end::Input-->
		<div class="fv-plugins-message-container invalid-feedback"></div>
	</div>
	<!--end::Input group-->
  </div>
	<!--begin::Input group-->
	<div class="row g-9 mb-7">
		<!--begin::Col-->
		<div class="col-md-4 fv-row fv-plugins-icon-container">
			<!--begin::Label-->
			<label class="required fs-6 fw-semibold mb-2">Phone 1</label>
			<!--end::Label-->
			<!--begin::Input-->
		<input type="text" required class="form-control form-control-solid" placeholder="" name="Patient.PatientTel1" value="@Model.Patient.PatientTel1">
			<!--end::Input-->
			<div class="fv-plugins-message-container invalid-feedback"></div>
		</div>
		<!--end::Col-->
		<!--begin::Col-->
		<div class="col-md-4 fv-row fv-plugins-icon-container">
			<!--begin::Label-->
			<label class=" fs-6 fw-semibold mb-2">phone 2</label>
			<!--end::Label-->
			<!--begin::Input-->
		<input type="text"  class="form-control form-control-solid" placeholder="" name="Patient.PatientTel2" value="@Model.Patient.PatientTel2">
			<!--end::Input-->
			<div class="fv-plugins-message-container invalid-feedback"></div>
		</div>
		<!--end::Col-->
	<!--end::Input group-->
		<div class="d-flex flex-column mb-7 fv-row fv-plugins-icon-container col-4">
			<!--begin::Label-->
			<label class="fs-6 fw-semibold mb-2">
				<span class="required">BirthDate</span>
				<i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" aria-label="Country of origination" data-bs-original-title="Country of origination" data-kt-initialized="1"></i>
			</label>
			<!--end::Label-->
			<!--begin::Input-->
		<input type="date" required class="form-control form-control-solid" placeholder="" asp-for="Patient.PatientBirthdate">
			<!--end::Input-->
			<div class="fv-plugins-message-container invalid-feedback"></div>
		</div>
	</div>


<script>
	// Get all the required input fields with the 'required' attribute
	const requiredInputs = document.querySelectorAll('input[required]');

	// Add an 'input' event listener to each required input field
	requiredInputs.forEach(input => {
		input.addEventListener('focus', function () {
			// Check if the input field is empty
			if (this.value.trim() === '') {
				// If it's empty, add an error message below the field
				addErrorMessage(this, 'This field is required.');
			} else {
				// If it's not empty, remove any error message
				removeErrorMessage(this);
			}
		});
	});

	// Function to add an error message below the input field
	function addErrorMessage(input, message) {
		const errorMessageContainer = input.nextElementSibling;
		errorMessageContainer.textContent = message;
		errorMessageContainer.style.color = 'red';
	}

	// Function to remove the error message below the input field
	function removeErrorMessage(input) {
		const errorMessageContainer = input.nextElementSibling;
		errorMessageContainer.textContent = '';
	}

</script>
